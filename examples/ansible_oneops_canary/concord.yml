configuration:
  dependencies:
    - "mvn://com.walmartlabs.concord.plugins.basic:ansible-tasks:1.18.0"
    - "mvn://com.walmartlabs.concord.plugins:oneops-tasks:1.10.0"
    - "mvn://org.codehaus.groovy:groovy-all:pom:2.5.2"

  arguments:
    oneopsCfg:
      apiToken: "myOneOpsToken" # store as a secret, use encrypted values or forms
      org: "myOneOpsOrg"
      asm: "myOneOpsAsm"
      env: "myOneOpsEnv"
      platform: "myOneOpsPlaform"

    # collect all IPs for the specified platform
    allIPs: "${oneops.getIPs(oneopsCfg, oneopsCfg.platform, 'compute')}"

flows:
  default:
  # grab 20% of IPs
  - script: groovy
    body: |
      def n = Math.max(1, Math.floorDiv(allIPs.size(), 5))
      def canary = new ArrayList(allIPs.subList(0, n))
      execution.setVariable('canaryIPs', canary)

  - checkpoint: "preCanary"

  # run the playbook using the canary IPs first
  - call: deployment
    in:
      ips: "${canaryIPs}"

  # ask a confirmation to proceed with "full" deployment
  - form: confirmationForm
    fields:
      - confirmed: { type: "boolean", label: "Proceed?" }
    yield: true

  - if: ${!confirmationForm.confirmed}
    then:
      - throw: "Deployment wasn't confirmed"

  # run the playbook using the all IPs
  - call: deployment
    in:
      ips: "${allIPs}"


  deployment:
  - task: ansible
    in:
      # location of the playbook
      playbook: "playbook/hello.yml"
      # remote server auth
      auth:
        privateKey:
          # remote user
          username: "myRemoteUser"
          # export the secret using the provided org name and secret name
          secret:
            org: "myOrg"
            name: "mySshKey"

      inventory:
        myHosts:
          hosts: "${ips}"
