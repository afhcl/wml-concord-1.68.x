configuration:
  dependencies:
  - "mvn://com.walmartlabs.concord.plugins.basic:ansible-tasks:1.19.0"
  - "mvn://com.walmartlabs.concord.plugins:boo-task:0.78.0"

flows:
  default:

  # ask users to provide some details about the new environment

  - form: credentialsForm
    yield: true

  # use Boo to provision a new environment

  - task: boo
    in:
      # mandatory parameters
      booTemplateLocation: "example.yml"
      apiKey: ${credentialsForm.apiKey}
      org: ${credentialsForm.org}
      asm: ${credentialsForm.asm}
      env: ${credentialsForm.env}
      email: ${initiator.attributes.mail}
      sshPublicKey: ${resource.asString(credentialsForm.publicKey)}

  # run a playbook on the new environment

  - task: ansible
    in:
      playbook: playbook/hello.yml

      # the remote server's user
      user: "app"

      # for production environments we recommend using Concord Secrets
      # instead of supplying the credentials directly
      privateKey: ${credentialsForm.privateKey}

      inventory:
        myHosts:
          # Boo provides some information about the created environment in
          # "platforms" and "deployment" variables.
          # We can extract the platform's IPs, assuming that only a single
          # platform was created by Boo:
          hosts: ${platforms[0].computes.stream().map(c -> c.privateIp).toList()}

forms:
  credentialsForm:
  - apiKey: {type: "string", inputType: "password", label: "OneOps API key"}
  - org: {type: "string", label: "OneOps Organization", value: "devtools"}
  - asm: {type: "string", label: "OneOps Assembly", value: "concord-boo-example"}
  - env: {type: "string", label: "OneOps Environment", value: "test01"}
  - publicKey: {type: "file", label: "SSH Public Key"}
  - privateKey: {type: "file", label: "SSH Private Key"}
