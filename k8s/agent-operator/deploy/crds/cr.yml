## Concord Agent Pool definition
##
## "%%var%%" are template variables which will be replaces by the operator
##
## %%configMapName%% - name of the ConfigMap resource used by the Agent's pod
## %%podName%% - Agent's pod name
## %%app%% - the operator's label
## %%poolName%% - name of the pool, the operator automatically uses the CR's name as the pool name
## %%concordCfgHash%% - configuration hash

apiVersion: concord.walmartlabs.com/v1alpha1
kind: AgentPool
metadata:
  name: example-agentpool
spec:
  queueSelector:
    agent:
      flavor: "k8s-test"

  autoScale: false
  minSize: 1
  maxSize: 10
  size: 1

  configMap:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: "%%configMapName%%"
    data:
      mvn.json: |
        {
          "repositories": [
            {
              "id": "central",
              "url": "https://repo.maven.apache.org/maven2/"
            }
          ]
        }

      agent.conf: |
        concord-agent {
          capabilities = {
              flavor = "k8s-test"
              k8s {
                  cluster = "minikube"
                  namespace = "default"
                  pod = ${MY_POD_NAME}
              }
          }

          workersCount = 1

          server {
              apiBaseUrl = "http://11.12.13.14:8001"
              websocketUrl = "ws://11.12.13.14:8001/websocket"
              readTimeout = "10 minutes"
          }
        }
      preStopHook.sh: |
        workers="1"
        num_retries=0
        MAX_RETRIES=5

        while [ "$workers" != "0" ] && [ "$num_retries" -lt "$MAX_RETRIES" ]
        do
          echo "[$HOSTNAME]: Agent is still executing a process.. enabling maintenance mode and checking the number of workers"
          mmode_response=`wget -qO - --post-data="" http://127.0.0.1:8010/maintenance-mode`

          mmode_enabled=`echo $mmode_response | sed -n 's/^.*\"maintenanceMode\":\([a-z]*\).*$/\1/p'`
          if [ "$mmode_enabled" == "true" ]; then
            echo "[$HOSTNAME]: Maintenance mode enabled: $mmode_enabled"

            workers=`echo $mmode_response | sed -n 's/^.*\"workersAlive\":\([0-9]*\).*$/\1/p'`
            echo "[$HOSTNAME]: Number of workers: $workers"

          else
            echo "[$HOSTNAME]: trouble enabling maintenance mode"
            num_retries=`expr $num_retries + 1`
          fi

        sleep 5
        done

        if [ "$num_retries" -ge "$MAX_RETRIES" ]; then
          echo "[$HOSTNAME]: Number of retries to enable exceeded $MAX_RETRIES times. Exiting ..."
          exit 1
        fi

        echo "[$HOSTNAME]: There are no processes running on this agent. Terminating..."

  pod:
    apiVersion: v1
    kind: Pod
    metadata:
      name: "%%podName%%"
      labels:
        app: "%%app%%"
        poolName: "%%poolName%%"
        concordCfgHash: "%%concordCfgHash%%"
    spec:
      terminationGracePeriodSeconds: 3600
      containers:
        - name: dind
          image: "docker:dind"
          args: ["-H tcp://0.0.0.0:6666"]
          resources:
            requests:
              cpu: 1
              memory: "2G"
              ephemeral-storage: "2G"
            limits:
              cpu: 2
              memory: "3G"
              ephemeral-storage: "3G"
          volumeMounts:
            - name: "process-tmp"
              mountPath: "/tmp"
            - mountPath: "/hooks/preStopHook.sh"
              name: cfg
              subPath: preStopHook.sh
          securityContext:
            privileged: true
          lifecycle:
            preStop:
              exec:
                command:
                  - "sh"
                  - "/hooks/preStopHook.sh"

        - name: agent
          image: "walmartlabs/concord-agent:latest"
          imagePullPolicy: Never
          volumeMounts:
            - mountPath: "/opt/concord/conf/agent.conf"
              name: cfg
              subPath: agent.conf
            - mountPath: "/opt/concord/conf/mvn.json"
              name: cfg
              subPath: mvn.json
            - mountPath: "/opt/concord/hooks/preStopHook.sh"
              name: cfg
              subPath: preStopHook.sh
            - mountPath: "/tmp"
              name: process-tmp
          resources:
            requests:
              cpu: "1"
              memory: "1G"
            limits:
              cpu: "2"
              memory: "2G"
          env:
            - name: CONCORD_TMP_DIR
              value: "/tmp/concord"
            - name: CONCORD_DOCKER_LOCAL_MODE
              value: "false"
            - name: DOCKER_HOST
              value: "tcp://localhost:6666"
            - name: CONCORD_CFG_FILE
              value: "/opt/concord/conf/agent.conf"
            - name: CONCORD_MAVEN_CFG
              value: "/opt/concord/conf/mvn.json"
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: USER_AGENT
              value: "k8s-agent $(MY_POD_NAMESPACE)/$(MY_POD_NAME) @ $(MY_POD_IP)"
          lifecycle:
            preStop:
              exec:
                command:
                  - "sh"
                  - "/opt/concord/hooks/preStopHook.sh"
      volumes:
        - name: cfg
          configMap:
            name: "%%configMapName%%"
        - name: process-tmp
          emptyDir: {}
